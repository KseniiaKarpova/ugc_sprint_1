version: '3.9'

services:

  #-----kafka-----
  test-kafka-0:
    image: bitnami/kafka:3.4
    ports:
      - "9094:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@test-kafka-0:9093,1@test-kafka-1:9093,2@test-kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://test-kafka-0:9092,EXTERNAL://127.0.0.1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

    volumes:
      - test_kafka_0_data:/bitnami/kafka


  test-kafka-1:
    image: bitnami/kafka:3.4
    ports:
      - "9095:9095"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@test-kafka-0:9093,1@test-kafka-1:9093,2@test-kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://test-kafka-1:9092,EXTERNAL://127.0.0.1:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

    volumes:
      - test_kafka_1_data:/bitnami/kafka

  test-kafka-2:
    image: bitnami/kafka:3.4
    ports:
      - "9096:9096"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@test-kafka-0:9093,1@test-kafka-1:9093,2@test-kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://test-kafka-2:9092,EXTERNAL://127.0.0.1:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - test_kafka_2_data:/bitnami/kafka

  test_postgres_db:
    image: postgres:15.5-alpine3.19
    container_name: test_postgres_db
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD}
      - POSTGRES_USER=${TEST_POSTGRES_USER}
      - POSTGRES_DB=${TEST_POSTGRES_DB}
    volumes:
      - test_pg_data:/var/lib/postgresql/data

  test_redis:
    image: redis:7.2.3-alpine3.18
    container_name: test_redis
    restart: always
    env_file:
      - .env
    volumes:
      - test_redis_data:/data

  test_auth_api:
    container_name: test_AuthAPI
    command: gunicorn main:app --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:9999
    env_file:
      - .env
    environment:
      AUTH_POSTGRES_HOST: ${TEST_POSTGRES_HOST}
      AUTH_POSTGRES_PASSWORD: ${TEST_POSTGRES_PASSWORD}
      AUTH_POSTGRES_USER: ${TEST_POSTGRES_USER}
      AUTH_POSTGRES_DB: ${TEST_POSTGRES_DB}
      AUTH_POSTGRES_PORT: ${TEST_POSTGRES_PORT}
      REDIS_HOST: ${TEST_REDIS_HOST}
      REDIS_PORT: ${TEST_REDIS_PORT}
    volumes:
      - ./AuthAPI:/src
    build:
      context: AuthAPI
      dockerfile: Dockerfile
    depends_on:
      test_postgres_db:
        condition: service_started
      test_redis:
        condition: service_started
    ports:
      - "9999:9999"
    
  #-----UGC service-----
  test_ugc_api:
    container_name: TEST_UGC_API
    command: gunicorn main:app --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:7075 --reload
    env_file:
      - .env
    environment:
      PYTHONPATH: /app
      KAFKA_HOST: ${TEST_KAFKA_HOST}
      KAFKA_PORT: ${TEST_KAFKA_PORT}
      KAFKA_TOPIC: ${TEST_KAFKA_TOPIC}
      REDIS_HOST: ${TEST_REDIS_HOST}
      REDIS_PORT: ${TEST_REDIS_PORT}
    volumes:
      - ./UGC:/app
    build:
      context: UGC
      dockerfile: Dockerfile
    depends_on:
      test-kafka-0:
        condition: service_started
    ports:
      - "7075:7075"

  tests:
    build:
      context: Tests
      dockerfile: dockerfile
    image: async_tests
    env_file:
      - .env
    environment:
      PYTHONPATH: /tests
      KAFKA_HOST: ${TEST_KAFKA_HOST}
      KAFKA_PORT: ${TEST_KAFKA_PORT}
      AUTH_POSTGRES_HOST: ${TEST_POSTGRES_HOST}
      AUTH_POSTGRES_PORT: ${TEST_POSTGRES_PORT}
    volumes:
      - ./Tests:/tests
    depends_on:
      test-kafka-0:
        condition: service_started
      test_auth_api:
        condition: service_started
      test_postgres_db:
        condition: service_started
      test_ugc_api:
        condition: service_started

volumes:
  test_pg_data:
  test_redis_data:
  test_kafka_0_data:
  test_kafka_1_data:
  test_kafka_2_data: